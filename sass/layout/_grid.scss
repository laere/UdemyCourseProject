//max-width: If there is enough available space
//then it will have the width we specified
//if the viewport is smaller than 114 rem it will
//fill the available space that we have
.row {
  max-width: $grid-width; // use rems
  background-color: #eee;
  margin: 0 auto;

  //.row:not()
  //select everything except the last child
  //margin-bottom 8rem for all rows except the last one
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  //selects all the elements in which the class attributs start with col-
  [class^="col-"] {
    background-color: orangered;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  //since columns are always inside rows we can nest it here
  //100% width of the row - the gutter - divided by 2
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
  }

  //100% of the width minus 3 gutter spaces divided by 4
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  //col 1 of 4 multiplied by 2 and adding gutter margin
  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
  }

  //col 1 of 4 multiplied by 3 and adding gutter margin x2
  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
  }



}
